<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.workflow.mapper.ActTaskMapper">

    <resultMap type="com.ruoyi.workflow.domain.vo.TaskWaitingVo" id="TaskWaitingVoResult">
        <result property="id" column="ID_"/>
        <result property="executionId" column="EXECUTION_ID_"/>
        <result property="processInstanceId" column="PROC_INST_ID_"/>
        <result property="processDefinitionId" column="PROC_DEF_ID_"/>
        <result property="name" column="NAME_"/>
        <result property="parentTaskId" column="PARENT_TASK_ID_"/>
        <result property="suspensionState" column="SUSPENSION_STATE_"/>
        <result property="description" column="DESCRIPTION_"/>
        <result property="taskDefinitionKey" column="TASK_DEF_KEY_"/>
        <result property="assignee" column="ASSIGNEE_"/>
        <result property="createTime" column="CREATE_TIME_"/>
        <result property="processDefinitionName" column="PROCESS_DEFINITION_NAME"/>
        <result property="processDefinitionVersion" column="VERSION_"/>
        <result property="processDefinitionKey" column="key_"/>

        <association property="actBusinessStatus" javaType="com.ruoyi.workflow.domain.ActBusinessStatus">
            <result property="id" column="id"/>
            <result property="businessKey" column="business_key"/>
            <result property="processInstanceId" column="process_instance_id"/>
            <result property="status" column="status"/>
            <result property="tableName" column="table_name"/>
            <result property="suspendedReason" column="suspended_reason"/>
        </association>

    </resultMap>

    <select id="getTaskWaitByPage" resultMap="TaskWaitingVoResult">
        select * from (
        select res.*, bs.*,rp.key_,rp.version_,rp.name_ as process_definition_name from act_ru_task res
            left join act_business_status bs on res.proc_inst_id_ = bs.process_instance_id
            left join act_re_procdef rp on rp.id_ = res.proc_def_id_
        <where>
            <if test="assignee != null and assignee != ''">
                ( res.assignee_ = #{assignee} or ( res.assignee_ is null and exists(select link.id_ from act_ru_identitylink link
                where link.task_id_ = res.id_ and link.type_ = 'candidate' and (link.user_id_ = #{assignee} ))))
            </if>
        </where>
        ) t
        ${ew.getCustomSqlSegment}
    </select>

    <select id="getTaskWaitCount" resultType="java.util.HashMap">
        select rp.key_ processDefinitionKey,rp.name_ processDefinitionName,count(rp.key_) count from act_ru_task res
        left join act_business_status bs on res.proc_inst_id_ = bs.process_instance_id
        left join act_re_procdef rp on rp.id_ = res.proc_def_id_
        <where>
            <if test="assignee != null and assignee != ''">
                ( res.assignee_ = #{assignee} or ( res.assignee_ is null and exists(select link.id_ from act_ru_identitylink link
                where link.task_id_ = res.id_ and link.type_ = 'candidate' and (link.user_id_ = #{assignee} ))))
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
        </where>
        group by rp.key_,rp.name_
    </select>

    <select id="getCommonTaskWaitByPage" resultType="java.util.HashMap">
        select *
        from (select res.*,
                     bs.id as act_business_status_id,
                     bs.business_key,
                     bs.process_instance_id,
                     bs.status,
                     bs.table_name,
                     bs.suspended_reason,
                     e.*
              from act_ru_task res
                       join act_business_status bs on res.proc_inst_id_ = bs.process_instance_id
                       JOIN ${tableName} e ON e.id = bs.business_key
              where (
                                res.assignee_ = #{assignee}
                            or (
                                        res.assignee_ is null
                                        and exists(
                                            select link.id_
                                            from act_ru_identitylink link
                                            where link.task_id_ = res.id_
                                              and link.type_ = 'candidate'
                                              and (link.user_id_ = #{assignee})
                                            )
                                    )
                        )) t
            ${ew.getCustomSqlSegment}
    </select>

    <select id="getCommonTaskFinishByPage" resultType="java.util.HashMap">
        select *
        from (select res.*,
                     bs.id as act_business_status_id,
                     bs.business_key,
                     bs.process_instance_id,
                     bs.status,
                     bs.table_name,
                     bs.suspended_reason,
                     e.*
              from act_hi_taskinst res
                       join act_business_status bs on res.proc_inst_id_ = bs.process_instance_id
                       join ${tableName} e
                            on e.id = bs.business_key
              where res.assignee_ = #{assignee}

                and res.end_time_ is not null
              order by res.start_time_ desc) t
            ${ew.getCustomSqlSegment}
    </select>

</mapper>
